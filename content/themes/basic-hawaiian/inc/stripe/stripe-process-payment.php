<?php
function pippin_stripe_process_payment() {
	if(isset($_POST['action']) && $_POST['action'] == 'stripe' && wp_verify_nonce($_POST['stripe_nonce'], 'stripe-nonce')) {

		global $stripe_options;

		// load the stripe libraries
		require_once(get_template_directory() . '/vendor/stripe/stripe-php/init.php');

		// retrieve the token generated by stripe.js
		$token = $_POST['stripeToken'];
		// retrieve cost type
		$cost_type = $_POST['cost_type'];
		// Calculate cost based on type
		if ( $cost_type === "one_unit" ) {
			$cost = get_field('one_unit_cost','option');
		} elseif ( $cost_type === "four_unit" ) {
			$cost = get_field('four_unit_cost','option');
		} elseif ( $cost_type === "three_unit" ) {
			$cost = get_field('upgrade_three_cost','option');
		}

		// check if we are using test mode
		// if(isset($stripe_options['test_mode']) && $stripe_options['test_mode']) {
		// 	$secret_key = $stripe_options['test_secret_key'];
		// } else {
		// 	$secret_key = $stripe_options['live_secret_key'];
		// }

	    if ( get_field('stripe_is_live','option') === false ) {
	  		$secret = get_field('stripe_test_secret','option');
	  	} elseif ( get_field('stripe_is_live','option') === true ) {
	  		$secret = get_field('stripe_live_secret','option');
	  	}

		// attempt to charge the customer's card
		try {

			$user = wp_get_current_user();

			\Stripe\Stripe::setApiKey($secret);
			$charge = \Stripe\Charge::create(array(
					'amount' => $cost, // $10
					'currency' => 'usd',
					'source' => $token,
					'receipt_email' => $user->data->user_email
				)
			);

		    // If payment is successful, update user role from nonpaid to student
			$user->remove_role('nonpaid');
			$user->add_role('student');

			// Add payment type to user meta
			update_user_meta($user->ID, 'paid', $cost_type);

			// redirect on successful payment
			$redirect = add_query_arg('payment', 'paid', $_POST['redirect']);

		} catch (Exception $e) {
			// redirect on failed payment
			$redirect = add_query_arg('payment', 'failed', $_POST['redirect']);
		}

		// redirect back to our previous page with the added query variable
		wp_redirect($redirect); exit;
	}
}
add_action('init', 'pippin_stripe_process_payment');
?>
